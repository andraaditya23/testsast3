pipeline {
	agent any
	tools {
        go 'go-1.17'
    }	
	environment {
		GO111MODULE = "on"

		PROJECT_ID = "pharos-main"
		
		NAME = "backend-pipeline-security"
		ORG = "pharos"

		DOCKER_REGISTRY = "gcr.io"
		DOCKER_REGISTRY_URL = "https://gcr.io"
		DOCKER_REGISTRY_PROJECT_URL = "${DOCKER_REGISTRY}/${PROJECT_ID}"
		DOCKER_IMAGE_URL = "${DOCKER_REGISTRY_PROJECT_URL}/${NAME}"
		
		PIPELINE_BOT_EMAIL = "pharos.bot@gmail.com"
		PIPELINE_BOT_NAME = "Pharmalink Pipeline Bot"

		DISCORD_WEBHOOK_URL = "https://discord.com/api/webhooks/877591443986870313/0ALWAO9W7cSgo4LytxSYUJtSXDoRKm9dnQGp-fHWtKfcsS4YCgC7kUpQPApemhZBjOnf"

		TARGET_REPO = "https://oauth2:WD6UQHAzARwsvWr_-N_z@gitlab.pharmalink.id/rnd/backend-pipeline-security"
		TARGET_DIR = "/var/jenkins_home/workspace/Gitlab-pipeline"
	}
	
	options {
		skipDefaultCheckout(true)
	}
 
	stages {
		stage('User Input'){
			steps{
				script{
					env.PROCEED = input message: 'Do you want to proceed the scan? (yes/no)',
										parameters: [string(defaultValue: 'yes',
										description: '',
										name: 'yes or no?')]
				}
				echo "${env.PROCEED}"
			}
		}

		stage('TruffleHog'){
			when{
				expression { env.PROCEED == "yes"}
			}
            steps{
				script{
					try{
						echo "[*] Running truffleHog ..."
						sh "trufflehog --regex --json --max_depth 1 --rules ${TARGET_DIR}/rules.json ${TARGET_REPO} > ${TARGET_DIR}/tfhog.result"
					}
					catch(err) {
						
					}
				}
				script{
					TFHOG_RESULT = sh (
						script: "jq . ${TARGET_DIR}/tfhog.result",
						returnStdout: true
					)

					TFHOG_FILEPATH = sh (
						script: "jq .path ${TARGET_DIR}/tfhog.result",
						returnStdout: true
					)

					TFHOG_ISSUE = sh (
						script: "jq .reason ${TARGET_DIR}/tfhog.result",
						returnStdout: true
					)

				}
				echo "${TFHOG_RESULT}"

				script{
					if ( TFHOG_RESULT ){
						echo "[*] Credential leaked at ${TFHOG_FILEPATH}"
						echo "[*] Issue ==> ${TFHOG_ISSUE}"
					}
					else {
						echo "[*] No credential leaked ..."
					}
				}

				echo "[*] Removing [tfhog.result] file ..."
				sh "rm ${TARGET_DIR}/tfhog.result"
            }
        }
	}
}
